{"version":3,"sources":["context.js","components/Searchform.js","components/Filter.js","components/Loading.js","components/Country.js","components/Countries.js","pages/Home.js","pages/Error.js","pages/OneCountry.js","components/Navbar.js","App.js","index.js"],"names":["AppContext","React","createContext","AppProvider","children","useState","input","setInput","countries","setCountries","loading","setLoading","displayRegion","setDisplayRegion","getCountries","useCallback","a","fetch","response","json","data","newData","map","item","callingCodes","name","region","flag","capital","population","id","numericCode","num","console","log","useEffect","Provider","value","regionalDisplay","useGlobalContext","useContext","Searchform","search","useRef","current","focus","className","onSubmit","e","preventDefault","type","placeholder","ref","onChange","target","Filter","regions","setRegions","allCountries","setAllCountries","getTheCountries","categories","Set","singleData","onClick","each","index","length","newCountries","filter","country","handleClick","Loading","Country","src","alt","to","Countries","Home","Error","OneCountry","useParams","setCountry","getCountry","info","nativeName","subregion","topLevelDomain","currencies","borders","languages","language","border","Navbar","mode","setMode","iconMode","paddingRight","fontSize","handleMode","document","getElementById","classList","toggle","style","display","justifyContent","App","exact","path","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.4b580374.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext, useCallback } from 'react'\nconst url = \"https://restcountries.eu/rest/v2/name/\";\n\nconst AppContext = React.createContext();\n\nconst AppProvider = ({children}) => {\n    const [input, setInput] = useState('a');\n    const [countries, setCountries] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [displayRegion, setDisplayRegion] = useState(false);\n\n    const getCountries = useCallback(async () => {\n        setLoading(true);\n        try {\n            const response = await fetch(`${url}${input}`);\n            const data = await response.json();\n            if(data) {\n                const newData = data.map((item) => {\n                    const {\n                        callingCodes, \n                        name, \n                        region, \n                        flag, \n                        capital, \n                        population,\n                        numericCode\n                    } = item;\n                    return {\n                        id:numericCode,\n                        name,\n                        region,\n                        flag,\n                        capital,\n                        population,\n                        num:callingCodes\n                    }\n                });\n                setCountries(newData)\n            } else {\n                setCountries([])\n            }\n            setLoading(false)\n        } catch (error) {\n            console.log(error);\n            setLoading(false)\n        }\n    },[input]);\n\n    const regionalDisplay = () => {\n        setDisplayRegion(!displayRegion);\n    };\n\n    useEffect(() => {\n        getCountries();\n    }, [input, getCountries]);\n\n    return (\n        <AppContext.Provider value={{\n            countries,\n            loading,\n            input,\n            setInput,\n            setCountries,\n            displayRegion,\n            regionalDisplay,\n        }}>\n            {children}\n        </AppContext.Provider>\n    )\n};\n\nexport const  useGlobalContext = () => {\n    return useContext(AppContext)\n};\n\nexport {AppProvider, AppContext}","import React from 'react'\nimport { BsSearch } from \"react-icons/bs\";\nimport { useGlobalContext } from \"../context\";\nimport { useRef, useEffect } from 'react'\n\nconst Searchform = () => {\n    const { setInput } = useGlobalContext();\n    const search = useRef('');\n\n    useEffect(() => {\n        search.current.focus();\n    },[]);\n\n    const searchCountry = (e) => {\n        setInput(e.target.value);\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n    };\n\n    return (\n        <main className=\"search-cont\">\n            <form id='form' onSubmit={handleSubmit}>\n                <BsSearch className=\"search-icon\"/>\n                <input \n                    type=\"text\"\n                    id=\"country-name\"\n                    placeholder=\"Search for a country...\"\n                    ref={search}\n                    onChange={searchCountry}\n                />\n            </form>\n        </main>\n    )\n};\n\nexport default Searchform;\n","import React from 'react'\nimport { useGlobalContext } from \"../context\";\nimport { useState, useEffect } from 'react';\nimport { FaChevronDown } from \"react-icons/fa\";\nconst url = \"https://restcountries.eu/rest/v2/all\";\n\nconst Filter = () => {\n    const {countries, setCountries, displayRegion, setDisplayRegion, regionalDisplay} = useGlobalContext();\n    const [regions, setRegions] = useState([]);\n    const [allCountries, setAllCountries] = useState(null);\n    \n    const handleClick = (each) => {\n        if(each === \"All\") {\n            setCountries(allCountries);\n            return;\n        }\n        const newCountries = allCountries.filter((country) => country.region === each);\n        setCountries(newCountries);\n    };\n\n    const getTheCountries = async () => {\n        const response = await fetch(url);\n        const data = await response.json();\n        if(data) {\n            const categories = new Set(data.map((singleData) => singleData.region));\n            setAllCountries(data);\n            setRegions([\"All\",...categories])\n        } else {\n            setAllCountries(null)\n        }\n    };\n\n    useEffect(() => {\n        getTheCountries();\n    }, []);\n\n    return (\n        <section className=\"filter\">\n            <p className=\"by-region\" onClick={regionalDisplay}>Filter by Region\n                <FaChevronDown/>\n            </p>\n            <div className={displayRegion ? \"filters\": \"nondisplay\"}>\n                {regions.map((each, index) => {\n                    return (each.length > 0 ?\n                        <button \n                            type=\"button\"\n                            key={index}\n                            onClick={() => handleClick(each)}\n                            className=\"btn\"\n                        >\n                            {each}\n                        </button>:\n                        null\n                    )\n                })}\n            </div>\n        </section>\n    )\n};\n\nexport default Filter;\n","import React from 'react'\n\nconst Loading = () => {\n    return (\n        <div className=\"loader\">\n        </div>\n    )\n};\n\nexport default Loading\n","import React from 'react'\nimport { Link } from \"react-router-dom\";\n\nconst Country = ({id, name, population, region, capital, flag}) => {\n    return (\n      <section key={id} className=\"each-country\">\n        <img src={flag} alt={name} />\n        <div className=\"country-info\">\n          <h2>{name}</h2>\n          <p><span>Population: </span>{population}</p>\n          <p><span>Region: </span>{region}</p>\n          <p><span>Capital: </span>{capital}</p>\n        </div>\n        <Link className=\"link\" to={`/country/${name}`}>More info</Link>\n      </section>\n    );\n}\n\nexport default Country\n","import React from 'react'\nimport {useGlobalContext} from '../context'\nimport Loading from './Loading';\nimport Country from './Country'\n\nconst Countries = () => {\n    const {loading, countries} = useGlobalContext();\n    if(loading) {\n        return (\n            <Loading/>\n        )\n    }\n    if(countries.length < 1) {\n        return (\n            <h2 className=\"no-result\">\n                No country matches your search input\n            </h2>\n        )\n    }\n    return (\n        <section className=\"countries\" id=\"countries\">\n            {countries.map((item) => {\n                return (\n                    <Country key={item.id} {...item}/>\n                )\n            })}\n        </section>\n    )\n}\n\nexport default Countries\n","import React from 'react'\nimport Searchform from '../components/Searchform'\nimport Filter from '../components/Filter'\nimport Countries from '../components/Countries'\n\nconst Home = () => {\n    return (\n        <main className=\"Home\">\n            <Searchform/>\n            <Filter />\n            <Countries />\n        </main>\n    )\n};\n\nexport default Home\n","import React from 'react'\nimport { Link } from \"react-router-dom\";\nimport { BiArrowBack } from \"react-icons/bi\";\n\nconst Error = () => {\n    return (\n        <section className='error'>\n            <div className='error-container'>\n                <h1>OOps! It's a dead end</h1>\n                <Link to=\"/\">\n                    <BiArrowBack/>\n                    Back\n                </Link>\n            </div>\n        </section>\n    )\n}\n\nexport default Error\n","import React from 'react'\nimport Loading from '../components/Loading'\nimport { useParams, Link } from 'react-router-dom'\nimport { BiArrowBack } from \"react-icons/bi\";\nconst url = \"https://restcountries.eu/rest/v2/name/\";\n\nconst OneCountry = () => {\n    const {name} = useParams();\n    const [loading, setLoading] = React.useState(false);\n    const [country, setCountry] = React.useState(null);\n\n    const getCountry = React.useCallback(async () => {\n        setLoading(true);\n        try {\n            const response = await fetch(`${url}${name}`);\n            const data = await response.json();\n            if(data) {\n                const {\n                    name:info,  \n                    nativeName,\n                    population, \n                    region, \n                    subregion, \n                    capital, \n                    topLevelDomain, \n                    currencies,\n                    borders,\n                    flag,\n                    languages\n                } = data[0];\n                const newData = {\n                  info,\n                  nativeName,\n                  population,\n                  region,\n                  subregion,\n                  capital,\n                  topLevelDomain,\n                  currencies,\n                  borders,\n                  flag,\n                  languages\n                };\n                setCountry(newData)\n            } else {\n                setCountry(null);\n                setLoading(false);\n            }\n            setLoading(false)\n        } catch (error) {\n            console.log(error);\n            setLoading(false);\n        }\n    },[name]);\n\n    React.useEffect(() => {\n        getCountry();\n    }, [name, getCountry]);\n\n    if(loading) {\n        return(\n            <Loading/>\n        )\n    }\n\n    if(!country) {\n        return(\n            <div className=\"no-country\">\n                <h1>No country to display</h1>\n            </div>\n        )\n    }\n\n    const {\n        info, \n        borders, \n        nativeName, \n        population, \n        region, \n        subregion, \n        capital, \n        topLevelDomain, \n        currencies,\n        flag,\n        languages\n    } = country;\n    console.log(languages);\n    return (\n      <main className=\"one-country\">\n        <section className=\"single\">\n            <Link to=\"/\" className=\"back\">\n            <BiArrowBack className=\"back-icon\"/>\n            Back\n            </Link>\n            <section className=\"content\">\n                <img src={flag} alt={info} />\n                <h2 className=\"info\">{info}</h2>\n                <div className=\"more-info1\">\n                    <p><span>Native Name: </span>{nativeName}</p>\n                    <p><span>Population: </span>{population}</p>\n                    <p><span>Region: </span>{region}</p>\n                    <p><span>Sub Region: </span>{subregion}</p>\n                    <p><span>Capital: </span>{capital}</p>\n                </div>\n                <div className=\"more-info2\">\n                    <p><span>Top Level Domain: </span>{topLevelDomain}</p>\n                    <p><span>Currencies: </span>{currencies[0].name}</p>\n                    <div className=\"lanuguages\"><span>Languages: </span>\n                        {languages.map((language) => {\n                        const {name} = language;\n                        return(\n                            <p className=\"languages\">{name}</p>\n                        )\n                    })}\n                    </div>\n                </div>\n                <div className=\"borders\">\n                    <h3>Border Countries:</h3>\n                    <ul className=\"border-countries\">\n                        {borders.length > 0 ?\n                        borders.map((border, index) => {\n                        return (\n                            <li className=\"list\" key={index}>\n                            {border}\n                            </li>\n                        );\n                        }):\n                        <p>No border country on record</p>\n                    }\n                    </ul>\n                </div>\n            </section>\n        </section>\n      </main>\n    );\n};\n\nexport default OneCountry;\n","import React, {useState} from 'react'\nimport {BiMoon, BiSun} from 'react-icons/bi';\nimport {Link} from \"react-router-dom\";\n\nconst Navbar = () => {\n    const [mode, setMode] = useState(false);\n    const styleNav = {\n        display: 'flex',\n        justifyContent: 'space-between'\n    };\n\n    const iconMode = {\n        paddingRight: '8px',\n        fontSize: '25px'\n    };\n\n    const handleMode = (e) => {\n        const body = document.getElementById('body');\n        // const modeCountry = document.getElementById('countries');\n        body.classList.toggle('dark');\n        // console.log(modeCountry);\n        // modeCountry.classList.toggle('dark');\n\n        setMode(!mode);\n    };\n    return (\n        <nav className=\"nav\" style={styleNav}>\n            <Link className=\"where\" to=\"/\">What in the world?</Link>\n            {mode ?\n                <button className=\"btn-mode\" onClick={handleMode}>\n                    <BiSun style={iconMode}/>\n                    <span>LightMode</span>\n                </button>\n                :\n                <button className=\"btn-mode\" onClick={handleMode}>\n                    <BiMoon style={iconMode}/>\n                    <span>DarkMode</span>\n                </button>\n            }\n\n        </nav>\n    )\n};\n\nexport default Navbar;","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch} from 'react-router-dom'\nimport './index.css';\n// Pages import\nimport Home from './pages/Home';\nimport Error from './pages/Error';\nimport OneCountry from './pages/OneCountry';\n// Component import\nimport Navbar from './components/Navbar';\n\nfunction App() {\n  return (\n    <Router>\n      <Navbar />\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route path=\"/country/:name\">\n          <OneCountry />\n        </Route>\n        <Route path=\"*\">\n          <Error />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {AppProvider} from './context';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals"],"sourceRoot":""}